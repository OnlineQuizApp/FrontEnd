{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllQuestions } from \"../service/QuestionService\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionService = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const questions = await getAllQuestions();\n      setQuestions(questions);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(QuestionService, \"CKB/k5G3mV4KobsSNqrjgt9uJws=\");\n_c = QuestionService;\nexport default QuestionService;\nvar _c;\n$RefreshReg$(_c, \"QuestionService\");","map":{"version":3,"names":["useEffect","useState","getAllQuestions","Fragment","_Fragment","jsxDEV","_jsxDEV","QuestionService","_s","questions","setQuestions","fetchData","_c","$RefreshReg$"],"sources":["D:/codegym/project-m6/FrontEnd/front_end_m6/src/component/QuestionListComponent.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport {getAllQuestions} from \"../service/QuestionService\";\r\n\r\nconst QuestionService = ()=>{\r\n    const [questions,setQuestions] = useState([]);\r\n    useEffect(() => {\r\n       const fetchData = async ()=>{\r\n           const questions =await getAllQuestions();\r\n           setQuestions(questions);\r\n       }\r\n       fetchData()\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default QuestionService;"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,eAAe,QAAO,4BAA4B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,eAAe,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC7CD,SAAS,CAAC,MAAM;IACb,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAU;MACxB,MAAMF,SAAS,GAAE,MAAMP,eAAe,CAAC,CAAC;MACxCQ,YAAY,CAACD,SAAS,CAAC;IAC3B,CAAC;IACDE,SAAS,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIL,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEX,CAAC;AAAAI,EAAA,CAhBKD,eAAe;AAAAK,EAAA,GAAfL,eAAe;AAiBrB,eAAeA,eAAe;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}