{"ast":null,"code":"var _jsxFileName = \"D:\\\\codegym\\\\project-m6\\\\FrontEnd\\\\front_end_m6\\\\src\\\\component\\\\CreateQuestionsComponent.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport { getAllCategory } from \"../service/CategoryService\";\nimport { createQuestions } from \"../service/QuestionService\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateQuestionsComponent = () => {\n  _s();\n  const [category, setCategory] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getAllCategory();\n      setCategory(data);\n    };\n    fetchData();\n  }, []);\n  const navigate = useNavigate();\n  const [answers, setAnswers] = useState([{\n    content: '',\n    correct: false\n  }, {\n    content: '',\n    correct: false\n  }, {\n    content: '',\n    correct: false\n  }, {\n    content: '',\n    correct: false\n  }]);\n  const handleCreateQuestions = async value => {\n    const newQuestion = {\n      content: value.content,\n      // Nội dung câu hỏi\n      categoryId: value.category,\n      // ID danh mục\n      answers: answers // Mảng các đáp án\n    };\n    console.log(newQuestion + \"---------------\");\n    try {\n      await createQuestions(newQuestion); // Gửi dữ liệu lên API\n      navigate('/questions'); // Chuyển hướng sau khi thêm câu hỏi thành công\n      toast.success('Thêm mới câu hỏi thành công!');\n    } catch (error) {\n      toast.error('Lỗi khi thêm câu hỏi!');\n    }\n    navigate('/questions');\n    toast.success('Thêm mới thành công!');\n  };\n  const handleAnswerChange = (index, field, value) => {\n    const updatedAnswers = [...answers];\n    updatedAnswers[index][field] = value;\n    setAnswers(updatedAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Th\\xEAm C\\xE2u H\\u1ECFi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: answers,\n      onSubmit: handleCreateQuestions,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nh\\u1EADp n\\u1ED9i dung c\\xE2u h\\u1ECFi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: 'content'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: 'content',\n          component: 'div'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: 'select',\n          name: 'category',\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: '',\n            children: \"-- Ch\\u1ECDn Danh M\\u1EE5c C\\xE2u H\\u1ECFi --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 27\n          }, this), category && category.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: c.id,\n            children: c.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 31\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: 'category',\n          component: 'div'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"\\u0110\\xE1p \\xE1n \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: answer.content,\n            onChange: e => handleAnswerChange(index, 'content', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              checked: answer.correct,\n              onChange: e => handleAnswerChange(index, 'correct', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              children: \"L\\xE0 \\u0111\\xE1p \\xE1n \\u0111\\xFAng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 31\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: 'submit',\n          children: \" Th\\xEAm m\\u1EDBi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n_s(CreateQuestionsComponent, \"r3s5RTnOwSb8Xb/o2CpfNB3uN+w=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateQuestionsComponent;\nexport default CreateQuestionsComponent;\nvar _c;\n$RefreshReg$(_c, \"CreateQuestionsComponent\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","useEffect","useState","getAllCategory","createQuestions","Button","useNavigate","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateQuestionsComponent","_s","category","setCategory","fetchData","data","navigate","answers","setAnswers","content","correct","handleCreateQuestions","value","newQuestion","categoryId","console","log","success","error","handleAnswerChange","index","field","updatedAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","onSubmit","name","component","as","map","c","id","answer","className","type","onChange","e","target","required","checked","_c","$RefreshReg$"],"sources":["D:/codegym/project-m6/FrontEnd/front_end_m6/src/component/CreateQuestionsComponent.js"],"sourcesContent":["import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getAllCategory} from \"../service/CategoryService\";\r\nimport {createQuestions} from \"../service/QuestionService\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst CreateQuestionsComponent = ()=>{\r\n    const [category,setCategory]=useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async ()=>{\r\n            const data =await getAllCategory();\r\n            setCategory(data);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n        const navigate = useNavigate();\r\n    const [answers, setAnswers] = useState([\r\n        { content: '', correct: false },\r\n        { content: '', correct: false },\r\n        { content: '', correct: false },\r\n        { content: '', correct: false }\r\n    ]);\r\n    const handleCreateQuestions= async (value)=>{\r\n        const newQuestion = {\r\n            content: value.content,  // Nội dung câu hỏi\r\n            categoryId: value.category,  // ID danh mục\r\n            answers: answers  // Mảng các đáp án\r\n        };\r\n        console.log(newQuestion+\"---------------\")\r\n        try {\r\n            await createQuestions(newQuestion);  // Gửi dữ liệu lên API\r\n            navigate('/questions');  // Chuyển hướng sau khi thêm câu hỏi thành công\r\n            toast.success('Thêm mới câu hỏi thành công!');\r\n        } catch (error) {\r\n            toast.error('Lỗi khi thêm câu hỏi!');\r\n        }\r\n\r\n      navigate('/questions');\r\n      toast.success('Thêm mới thành công!');\r\n    }\r\n    const handleAnswerChange = (index, field, value) => {\r\n        const updatedAnswers = [...answers];\r\n        updatedAnswers[index][field] = value;\r\n        setAnswers(updatedAnswers);\r\n    };\r\n    return (\r\n        <>\r\n            <h1>Thêm Câu Hỏi</h1>\r\n              <Formik initialValues={answers} onSubmit={handleCreateQuestions}>\r\n                  <Form>\r\n                      <label>Nhập nội dung câu hỏi</label>\r\n                      <Field name={'content'}></Field><br/>\r\n                      <ErrorMessage name={'content'} component={'div'}></ErrorMessage>\r\n                      <Field as={'select'} name={'category'}>\r\n                          <option value={''}>-- Chọn Danh Mục Câu Hỏi --</option>\r\n                          {category && category.map((c) => (\r\n                              <option value={c.id}>{c.name}</option>\r\n                          ))}\r\n                      </Field><br/>\r\n                      <ErrorMessage name={'category'} component={'div'}></ErrorMessage>\r\n                      {answers.map((answer, index) => (\r\n                          <div className=\"mb-3\" key={index}>\r\n                              <label className=\"form-label\">Đáp án {index + 1}:</label>\r\n                              <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  value={answer.content}\r\n                                  onChange={(e) => handleAnswerChange(index, 'content', e.target.value)}\r\n                                  required\r\n                              />\r\n                              <div className=\"form-check mt-1\">\r\n                                  <input\r\n                                      className=\"form-check-input\"\r\n                                      type=\"checkbox\"\r\n                                      checked={answer.correct}\r\n                                      onChange={(e) => handleAnswerChange(index, 'correct', e.target.checked)}\r\n                                  />\r\n                                  <label className=\"form-check-label\">Là đáp án đúng</label>\r\n                              </div>\r\n                          </div>\r\n                      ))}\r\n                      <button type={'submit'}> Thêm mới</button>\r\n                  </Form>\r\n              </Formik>\r\n        </>\r\n    );\r\n}\r\nexport default CreateQuestionsComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}