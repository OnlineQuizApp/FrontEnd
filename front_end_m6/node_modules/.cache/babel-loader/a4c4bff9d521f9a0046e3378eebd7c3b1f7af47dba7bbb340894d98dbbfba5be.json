{"ast":null,"code":"var _jsxFileName = \"D:\\\\codegym\\\\project-m6\\\\FrontEnd\\\\front_end_m6\\\\src\\\\component\\\\CreateQuestionsComponent.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport { getAllCategory } from \"../service/CategoryService\";\nimport { createQuestions } from \"../service/QuestionService\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateQuestionsComponent = () => {\n  _s();\n  const [category, setCategory] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getAllCategory();\n      setCategory(data);\n    };\n    fetchData();\n  }, []);\n  const navigate = useNavigate();\n  const [answers, setAnswers] = useState([{\n    content: '',\n    correct: false\n  }, {\n    content: '',\n    correct: false\n  }, {\n    content: '',\n    correct: false\n  }, {\n    content: '',\n    correct: false\n  }]);\n  const handleCreateQuestions = async value => {\n    const newQuestion = {\n      content: value.content,\n      // Nội dung câu hỏi\n      categoryId: value.category,\n      // ID danh mục\n      answers: answers // Mảng các đáp án\n    };\n    console.log(newQuestion.categoryId + \"---------------\");\n    try {\n      await createQuestions(newQuestion); // Gửi dữ liệu lên API\n      navigate('/questions'); // Chuyển hướng sau khi thêm câu hỏi thành công\n      toast.success('Thêm mới câu hỏi thành công!');\n    } catch (error) {\n      toast.error('Lỗi khi thêm câu hỏi!');\n    }\n    navigate('/questions');\n    toast.success('Thêm mới thành công!');\n  };\n  const handleAnswerChange = (index, field, value) => {\n    const updatedAnswers = [...answers];\n    updatedAnswers[index][field] = value;\n    setAnswers(updatedAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Th\\xEAm C\\xE2u H\\u1ECFi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        content: '',\n        category: ''\n      },\n      onSubmit: handleCreateQuestions,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nh\\u1EADp n\\u1ED9i dung c\\xE2u h\\u1ECFi:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"content\",\n            as: \"textarea\",\n            placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"content\",\n            component: \"div\",\n            className: \"text-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ch\\u1ECDn danh m\\u1EE5c:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: \"select\",\n            name: \"category\",\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Ch\\u1ECDn Danh M\\u1EE5c C\\xE2u H\\u1ECFi --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), category && category.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: c.id,\n              children: c.name\n            }, c.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"category\",\n            component: \"div\",\n            className: \"text-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"\\u0110\\xE1p \\xE1n \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: answer.content,\n            onChange: e => handleAnswerChange(index, 'content', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              checked: answer.correct,\n              onChange: e => handleAnswerChange(index, 'correct', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              children: \"L\\xE0 \\u0111\\xE1p \\xE1n \\u0111\\xFAng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Th\\xEAm m\\u1EDBi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CreateQuestionsComponent, \"r3s5RTnOwSb8Xb/o2CpfNB3uN+w=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateQuestionsComponent;\nexport default CreateQuestionsComponent;\nvar _c;\n$RefreshReg$(_c, \"CreateQuestionsComponent\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","useEffect","useState","getAllCategory","createQuestions","Button","useNavigate","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateQuestionsComponent","_s","category","setCategory","fetchData","data","navigate","answers","setAnswers","content","correct","handleCreateQuestions","value","newQuestion","categoryId","console","log","success","error","handleAnswerChange","index","field","updatedAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","onSubmit","name","as","placeholder","className","component","map","c","id","answer","type","onChange","e","target","required","checked","variant","_c","$RefreshReg$"],"sources":["D:/codegym/project-m6/FrontEnd/front_end_m6/src/component/CreateQuestionsComponent.js"],"sourcesContent":["import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getAllCategory} from \"../service/CategoryService\";\r\nimport {createQuestions} from \"../service/QuestionService\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst CreateQuestionsComponent = ()=>{\r\n    const [category,setCategory]=useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async ()=>{\r\n            const data =await getAllCategory();\r\n            setCategory(data);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n        const navigate = useNavigate();\r\n    const [answers, setAnswers] = useState([\r\n        { content: '', correct: false },\r\n        { content: '', correct: false },\r\n        { content: '', correct: false },\r\n        { content: '', correct: false }\r\n    ]);\r\n    const handleCreateQuestions= async (value)=>{\r\n        const newQuestion = {\r\n            content: value.content,  // Nội dung câu hỏi\r\n            categoryId: value.category,  // ID danh mục\r\n            answers: answers  // Mảng các đáp án\r\n        };\r\n        console.log(newQuestion.categoryId+\"---------------\")\r\n        try {\r\n            await createQuestions(newQuestion);  // Gửi dữ liệu lên API\r\n            navigate('/questions');  // Chuyển hướng sau khi thêm câu hỏi thành công\r\n            toast.success('Thêm mới câu hỏi thành công!');\r\n        } catch (error) {\r\n            toast.error('Lỗi khi thêm câu hỏi!');\r\n        }\r\n\r\n      navigate('/questions');\r\n      toast.success('Thêm mới thành công!');\r\n    }\r\n    const handleAnswerChange = (index, field, value) => {\r\n        const updatedAnswers = [...answers];\r\n        updatedAnswers[index][field] = value;\r\n        setAnswers(updatedAnswers);\r\n    };\r\n    return (\r\n        <>\r\n            <h1>Thêm Câu Hỏi</h1>\r\n            <Formik\r\n                initialValues={{\r\n                    content: '',\r\n                    category: ''\r\n                }}\r\n                onSubmit={handleCreateQuestions}\r\n            >\r\n                <Form>\r\n                    <div>\r\n                        <label>Nhập nội dung câu hỏi:</label>\r\n                        <Field\r\n                            name=\"content\"\r\n                            as=\"textarea\"\r\n                            placeholder=\"Nhập câu hỏi\"\r\n                            className=\"form-control\"\r\n                        />\r\n                        <ErrorMessage name=\"content\" component=\"div\" className=\"text-danger\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Chọn danh mục:</label>\r\n                        <Field as=\"select\" name=\"category\" className=\"form-control\">\r\n                            <option value=\"\">-- Chọn Danh Mục Câu Hỏi --</option>\r\n                            {category && category.map((c) => (\r\n                                <option key={c.id} value={c.id}>{c.name}</option>\r\n                            ))}\r\n                        </Field>\r\n                        <ErrorMessage name=\"category\" component=\"div\" className=\"text-danger\" />\r\n                    </div>\r\n\r\n                    {answers.map((answer, index) => (\r\n                        <div className=\"mb-3\" key={index}>\r\n                            <label className=\"form-label\">Đáp án {index + 1}:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={answer.content}\r\n                                onChange={(e) => handleAnswerChange(index, 'content', e.target.value)}\r\n                                required\r\n                            />\r\n                            <div className=\"form-check mt-1\">\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    checked={answer.correct}\r\n                                    onChange={(e) => handleAnswerChange(index, 'correct', e.target.checked)}\r\n                                />\r\n                                <label className=\"form-check-label\">Là đáp án đúng</label>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Thêm mới\r\n                    </Button>\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\nexport default CreateQuestionsComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}