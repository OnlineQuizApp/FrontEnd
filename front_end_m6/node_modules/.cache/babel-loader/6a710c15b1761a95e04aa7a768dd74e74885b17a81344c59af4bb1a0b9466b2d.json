{"ast":null,"code":"import axios from \"axios\";\nimport { data } from \"react-router-dom\";\nconst token = localStorage.getItem(\"token\");\n// Thiết lập header auth\nconst authHeader = token ? {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n} : {}; // không gửi gì cả nếu không có token\n\nexport async function getAllQuestions(page, category) {\n  try {\n    const response = await axios.get(`http://localhost:8080/api/questions?page=${page}&category=${category}`, authHeader);\n    const data = response.data.content;\n    const totalPage = response.data.totalPages;\n    return {\n      data,\n      totalPage\n    };\n  } catch (e) {\n    console.log(\"Lỗi hiển thị: \" + e);\n    return {\n      data: [],\n      totalPage: 0\n    };\n  }\n}\nexport async function detailQuestions(id) {\n  try {\n    const response = await axios.get(`http://localhost:8080/api/questions/${id}`, authHeader);\n    console.log(\"detail:\" + response.data);\n    return response.data;\n  } catch (e) {\n    console.log(\"Lỗi detail: \" + e);\n    return {\n      data: [],\n      totalPage: 0\n    };\n  }\n}\nexport async function deleteQuestions(id) {\n  try {\n    const response = await axios.delete(`http://localhost:8080/api/questions/${id}`, authHeader);\n    console.log(\"delete:\" + response.data);\n  } catch (e) {\n    console.log(\"Lỗi xoá câu hỏi: \" + e);\n    return {\n      data: [],\n      totalPage: 0\n    };\n  }\n}\nexport async function createQuestions(newQuestions) {\n  try {\n    const response = await axios.post(`http://localhost:8080/api/questions`, newQuestions, authHeader);\n    console.log(\"delete:\" + response.data);\n  } catch (e) {\n    console.log(\"Lỗi thêm câuu hỏi: \" + e);\n    return {\n      data: [],\n      totalPage: 0\n    };\n  }\n}\nexport async function createQuestionsOnFileExcel(file) {\n  try {\n    const response = await axios.post(`http://localhost:8080/api/questions/upload-file-excel`, file, authHeader);\n    console.log(\"creteFileExcel:\" + response.data);\n  } catch (e) {\n    console.log(\"Lỗi thêm file excel: \" + e);\n    return {\n      data: [],\n      totalPage: 0\n    };\n  }\n}\nexport async function createQuestionsOnImg(newQuestion) {\n  console.log(\"token: \", authHeader);\n  try {\n    const response = await axios.post(`http://localhost:8080/api/questions/upload-file-img`, newQuestion, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    console.log(\"createImg:\" + response.data);\n  } catch (e) {\n    console.log(\"Lỗi thêm mới img: \" + e);\n    return {\n      data: [],\n      totalPage: 0\n    };\n  }\n}\nexport async function updateQuestions(id, newQuestion) {\n  try {\n    const response = await axios.put(`http://localhost:8080/api/questions/${id}`, newQuestion, authHeader);\n    console.log(\"createImg:\" + response.data);\n  } catch (e) {\n    console.log(\"Lỗi update: \" + e);\n    return {\n      data: [],\n      totalPage: 0\n    };\n  }\n}","map":{"version":3,"names":["axios","data","token","localStorage","getItem","authHeader","headers","Authorization","getAllQuestions","page","category","response","get","content","totalPage","totalPages","e","console","log","detailQuestions","id","deleteQuestions","delete","createQuestions","newQuestions","post","createQuestionsOnFileExcel","file","createQuestionsOnImg","newQuestion","updateQuestions","put"],"sources":["D:/codegym/project-m6/FrontEnd/front_end_m6/src/service/QuestionService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {data} from \"react-router-dom\";\r\n\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n// Thiết lập header auth\r\nconst authHeader = token\r\n    ? { headers: { Authorization: `Bearer ${token}` }}\r\n    : {}; // không gửi gì cả nếu không có token\r\n\r\nexport async function getAllQuestions(page,category){\r\n    try {\r\n        const response = await axios.get(`http://localhost:8080/api/questions?page=${page}&category=${category}`,authHeader);\r\n        const  data = response.data.content;\r\n        const totalPage = response.data.totalPages;\r\n        return {data,totalPage}\r\n    }catch (e) {\r\n        console.log(\"Lỗi hiển thị: \"+e);\r\n        return { data: [], totalPage: 0 };\r\n    }\r\n}\r\nexport async function detailQuestions(id){\r\n\r\n    try {\r\n        const response = await axios.get(`http://localhost:8080/api/questions/${id}`,authHeader);\r\n        console.log(\"detail:\"+response.data);\r\n        return  response.data\r\n    }catch (e) {\r\n        console.log(\"Lỗi detail: \"+e);\r\n        return { data: [], totalPage: 0 };\r\n    }\r\n}\r\nexport async function deleteQuestions(id){\r\n\r\n    try {\r\n        const response = await axios.delete(`http://localhost:8080/api/questions/${id}`,authHeader);\r\n        console.log(\"delete:\"+response.data);\r\n    }catch (e) {\r\n        console.log(\"Lỗi xoá câu hỏi: \"+e);\r\n        return { data: [], totalPage: 0 };\r\n    }\r\n}\r\nexport async function createQuestions(newQuestions){\r\n\r\n    try {\r\n        const response = await axios.post(`http://localhost:8080/api/questions`,newQuestions,authHeader);\r\n        console.log(\"delete:\"+response.data);\r\n    }catch (e) {\r\n        console.log(\"Lỗi thêm câuu hỏi: \"+e);\r\n        return { data: [], totalPage: 0 };\r\n    }\r\n}\r\nexport async function createQuestionsOnFileExcel(file){\r\n\r\n    try {\r\n        const response = await axios.post(`http://localhost:8080/api/questions/upload-file-excel`,file,authHeader);\r\n        console.log(\"creteFileExcel:\"+response.data);\r\n    }catch (e) {\r\n        console.log(\"Lỗi thêm file excel: \"+e);\r\n        return { data: [], totalPage: 0 };\r\n    }\r\n}\r\nexport async function createQuestionsOnImg(newQuestion){\r\n    console.log(\"token: \",authHeader)\r\n    try {\r\n        const response = await axios.post(`http://localhost:8080/api/questions/upload-file-img`,newQuestion,\r\n            {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        });\r\n        console.log(\"createImg:\"+response.data);\r\n    }catch (e) {\r\n        console.log(\"Lỗi thêm mới img: \"+e);\r\n        return { data: [], totalPage: 0 };\r\n    }\r\n\r\n}\r\n\r\nexport async function updateQuestions(id,newQuestion){\r\n\r\n    try {\r\n        const response = await axios.put(`http://localhost:8080/api/questions/${id}`,newQuestion,authHeader);\r\n        console.log(\"createImg:\"+response.data);\r\n    }catch (e) {\r\n        console.log(\"Lỗi update: \"+e);\r\n        return { data: [], totalPage: 0 };\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAO,kBAAkB;AAGrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAC3C;AACA,MAAMC,UAAU,GAAGH,KAAK,GAClB;EAAEI,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUL,KAAK;EAAG;AAAC,CAAC,GAChD,CAAC,CAAC,CAAC,CAAC;;AAEV,OAAO,eAAeM,eAAeA,CAACC,IAAI,EAACC,QAAQ,EAAC;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,4CAA4CH,IAAI,aAAaC,QAAQ,EAAE,EAACL,UAAU,CAAC;IACpH,MAAOJ,IAAI,GAAGU,QAAQ,CAACV,IAAI,CAACY,OAAO;IACnC,MAAMC,SAAS,GAAGH,QAAQ,CAACV,IAAI,CAACc,UAAU;IAC1C,OAAO;MAACd,IAAI;MAACa;IAAS,CAAC;EAC3B,CAAC,QAAOE,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAACF,CAAC,CAAC;IAC/B,OAAO;MAAEf,IAAI,EAAE,EAAE;MAAEa,SAAS,EAAE;IAAE,CAAC;EACrC;AACJ;AACA,OAAO,eAAeK,eAAeA,CAACC,EAAE,EAAC;EAErC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,uCAAuCQ,EAAE,EAAE,EAACf,UAAU,CAAC;IACxFY,OAAO,CAACC,GAAG,CAAC,SAAS,GAACP,QAAQ,CAACV,IAAI,CAAC;IACpC,OAAQU,QAAQ,CAACV,IAAI;EACzB,CAAC,QAAOe,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAAC,cAAc,GAACF,CAAC,CAAC;IAC7B,OAAO;MAAEf,IAAI,EAAE,EAAE;MAAEa,SAAS,EAAE;IAAE,CAAC;EACrC;AACJ;AACA,OAAO,eAAeO,eAAeA,CAACD,EAAE,EAAC;EAErC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMX,KAAK,CAACsB,MAAM,CAAC,uCAAuCF,EAAE,EAAE,EAACf,UAAU,CAAC;IAC3FY,OAAO,CAACC,GAAG,CAAC,SAAS,GAACP,QAAQ,CAACV,IAAI,CAAC;EACxC,CAAC,QAAOe,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAACF,CAAC,CAAC;IAClC,OAAO;MAAEf,IAAI,EAAE,EAAE;MAAEa,SAAS,EAAE;IAAE,CAAC;EACrC;AACJ;AACA,OAAO,eAAeS,eAAeA,CAACC,YAAY,EAAC;EAE/C,IAAI;IACA,MAAMb,QAAQ,GAAG,MAAMX,KAAK,CAACyB,IAAI,CAAC,qCAAqC,EAACD,YAAY,EAACnB,UAAU,CAAC;IAChGY,OAAO,CAACC,GAAG,CAAC,SAAS,GAACP,QAAQ,CAACV,IAAI,CAAC;EACxC,CAAC,QAAOe,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAACF,CAAC,CAAC;IACpC,OAAO;MAAEf,IAAI,EAAE,EAAE;MAAEa,SAAS,EAAE;IAAE,CAAC;EACrC;AACJ;AACA,OAAO,eAAeY,0BAA0BA,CAACC,IAAI,EAAC;EAElD,IAAI;IACA,MAAMhB,QAAQ,GAAG,MAAMX,KAAK,CAACyB,IAAI,CAAC,uDAAuD,EAACE,IAAI,EAACtB,UAAU,CAAC;IAC1GY,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAACP,QAAQ,CAACV,IAAI,CAAC;EAChD,CAAC,QAAOe,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAACF,CAAC,CAAC;IACtC,OAAO;MAAEf,IAAI,EAAE,EAAE;MAAEa,SAAS,EAAE;IAAE,CAAC;EACrC;AACJ;AACA,OAAO,eAAec,oBAAoBA,CAACC,WAAW,EAAC;EACnDZ,OAAO,CAACC,GAAG,CAAC,SAAS,EAACb,UAAU,CAAC;EACjC,IAAI;IACA,MAAMM,QAAQ,GAAG,MAAMX,KAAK,CAACyB,IAAI,CAAC,qDAAqD,EAACI,WAAW,EAC/F;MACAvB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACFW,OAAO,CAACC,GAAG,CAAC,YAAY,GAACP,QAAQ,CAACV,IAAI,CAAC;EAC3C,CAAC,QAAOe,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAACF,CAAC,CAAC;IACnC,OAAO;MAAEf,IAAI,EAAE,EAAE;MAAEa,SAAS,EAAE;IAAE,CAAC;EACrC;AAEJ;AAEA,OAAO,eAAegB,eAAeA,CAACV,EAAE,EAACS,WAAW,EAAC;EAEjD,IAAI;IACA,MAAMlB,QAAQ,GAAG,MAAMX,KAAK,CAAC+B,GAAG,CAAC,uCAAuCX,EAAE,EAAE,EAACS,WAAW,EAACxB,UAAU,CAAC;IACpGY,OAAO,CAACC,GAAG,CAAC,YAAY,GAACP,QAAQ,CAACV,IAAI,CAAC;EAC3C,CAAC,QAAOe,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAAC,cAAc,GAACF,CAAC,CAAC;IAC7B,OAAO;MAAEf,IAAI,EAAE,EAAE;MAAEa,SAAS,EAAE;IAAE,CAAC;EACrC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}